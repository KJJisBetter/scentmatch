#!/bin/bash

echo "🚀 Starting End-to-End Frontend Verification"
echo "============================================"

# Check if development server is running
if curl -s http://localhost:3000 > /dev/null 2>&1; then
    echo "✅ Development server is already running"
    SERVER_WAS_RUNNING=true
else
    echo "🏁 Starting development server..."
    npm run dev &
    DEV_SERVER_PID=$!
    SERVER_WAS_RUNNING=false
    
    # Wait for server to be ready
    echo "⏳ Waiting for server to be ready..."
    for i in {1..30}; do
        if curl -s http://localhost:3000 > /dev/null 2>&1; then
            echo "✅ Server is ready"
            break
        fi
        echo "🔄 Attempt $i/30 - waiting..."
        sleep 2
    done
    
    if ! curl -s http://localhost:3000 > /dev/null 2>&1; then
        echo "❌ Server failed to start"
        exit 1
    fi
fi

# Ensure output directory exists
mkdir -p test-results

echo ""
echo "🧪 Running comprehensive frontend verification tests..."
echo ""

# Run the Playwright tests
npx playwright test tests/qa/end-to-end-verification.test.ts --config=playwright.e2e.config.ts --reporter=html,json,list

TEST_EXIT_CODE=$?

echo ""
echo "📊 Generating verification report..."

# Check if we have test results
if [ -f "test-results/results.json" ]; then
    echo "✅ Test results found"
else
    echo "⚠️ Test results not found - generating basic report"
fi

# Create summary report
TIMESTAMP=$(date -Iseconds)
SUMMARY_FILE="test-results/frontend-verification-summary.md"

cat > "$SUMMARY_FILE" << EOF
# Frontend Verification Report

**Date:** $TIMESTAMP
**Environment:** Development  
**Status:** Verification Complete

## Test Execution Summary

- **Test Runner:** Playwright
- **Configuration:** playwright.e2e.config.ts
- **Test File:** tests/qa/end-to-end-verification.test.ts
- **Exit Code:** $TEST_EXIT_CODE

## Reports Available

- **HTML Report:** test-results/html-report/index.html
- **JSON Results:** test-results/results.json (if available)
- **Summary:** test-results/frontend-verification-summary.md

## What Was Verified

### ✅ Complete User Journey Testing
- Home page to dashboard registration flow
- Authentication system integration  
- Protected route access controls
- Session persistence verification

### ✅ Performance Validation
- Core Web Vitals measurement (LCP, INP, CLS)
- Cross-device responsiveness testing
- Database query performance verification
- Error handling and recovery testing

### ✅ Accessibility Compliance  
- WCAG 2.2 AA compliance verification
- Screen reader compatibility
- Keyboard navigation support
- Cross-platform accessibility

### ✅ Integration Testing
- Frontend-backend integration
- Database RLS policy enforcement
- Cross-feature integration verification
- Multi-device compatibility

## Platform Status

$(if [ $TEST_EXIT_CODE -eq 0 ]; then
    echo "**Frontend Verification:** Complete ✅"
    echo "**Integration Status:** Verified ✅"
    echo "**Performance Targets:** Met ✅" 
    echo "**Accessibility Standards:** Compliant ✅"
    echo ""
    echo "## Recommendation"
    echo ""
    echo "**✅ PRODUCTION READY:** All critical tests passed successfully."
else
    echo "**Frontend Verification:** Issues Found ⚠️"
    echo "**Integration Status:** Review Required ⚠️"
    echo "**Performance Targets:** Check Results ⚠️"
    echo "**Accessibility Standards:** Review Required ⚠️"
    echo ""
    echo "## Recommendation"
    echo ""
    echo "**⚠️ REVIEW REQUIRED:** Some tests failed. Check detailed results."
fi)

## Next Steps

1. **Review detailed results** in HTML report: test-results/html-report/index.html
2. **Address any failing tests** before production deployment
3. **Set up continuous testing** pipeline for ongoing verification
4. **Monitor Core Web Vitals** in production environment

---

*Generated by ScentMatch Frontend Verification System*
EOF

echo "✅ Summary report generated: $SUMMARY_FILE"

# Display final results
echo ""
echo "============================================"
echo "📋 FRONTEND VERIFICATION COMPLETE"
echo "============================================"

if [ $TEST_EXIT_CODE -eq 0 ]; then
    echo "🎉 All tests passed successfully!"
    echo "✅ Platform is ready for production deployment"
else
    echo "⚠️ Some tests failed (exit code: $TEST_EXIT_CODE)"
    echo "📄 Check detailed results in: test-results/html-report/index.html"
fi

echo ""
echo "📄 Reports available:"
echo "   - Summary: $SUMMARY_FILE"
if [ -f "test-results/html-report/index.html" ]; then
    echo "   - HTML Report: test-results/html-report/index.html"
fi
if [ -f "test-results/results.json" ]; then
    echo "   - JSON Results: test-results/results.json"
fi

# Cleanup server if we started it
if [ "$SERVER_WAS_RUNNING" = false ] && [ -n "$DEV_SERVER_PID" ]; then
    echo ""
    echo "🛑 Stopping development server..."
    kill $DEV_SERVER_PID 2>/dev/null
    sleep 2
    echo "✅ Development server stopped"
fi

echo ""
echo "🎯 Frontend verification process complete!"

exit $TEST_EXIT_CODE